<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" />
	<title>Relay</title>
	<script>
		strA = "";
		function gId(s) { return d.getElementById(s); }
		function gN(s) { return d.getElementsByName(s)[0]; }
		function send() {
			nocache = "&nocache=" + Math.random() * 1000000;
			var request = new XMLHttpRequest();
			// send HTTP request
			request.open("POST", "win/" + strA + nocache, true);
			request.send(null);
			strA = "";
		}

		function forward() {
			strA = "&CM=1";
			send();
		}
		function reverse() {
			strA = "&CM=2";
			send();
		}
		function up() {
			strA = "&CM=3";
			send();
		}
		function down() {
			strA = "&CM=4";
			send();
		}
		function start() {
			strA = "&CM=5";
			send();
		}
		function end() {
			strA = "&CM=6";
			send();
		}

		function process_touchstart(ev) {
			// Use the event's data to call out to the appropriate gesture handlers
			//   switch (ev.touches.length) {
			//     case 1: handle_one_touch(ev); break;
			//     case 2: handle_two_touches(ev); break;
			//     case 3: handle_three_touches(ev); break;
			//     default: gesture_not_supported(ev); break;
			//   }
			strA = "&CM=5";
			send();
		}

		function process_touchend(ev) {
			strA = "&CM=6";
			send();
		}
		function touch2Mouse(e) {
			var theTouch = e.changedTouches[0];
			var mouseEv;

			switch (e.type) {
				case "touchstart": mouseEv = "mousedown"; break;
				case "touchend": mouseEv = "mouseup"; break;
				case "touchmove": mouseEv = "mousemove"; break;
				default: return;
			}

			var mouseEvent = document.createEvent("MouseEvent");
			mouseEvent.initMouseEvent(mouseEv, true, true, window, 1, theTouch.screenX, theTouch.screenY, theTouch.clientX, theTouch.clientY, false, false, false, false, 0, null);
			theTouch.target.dispatchEvent(mouseEvent);

			e.preventDefault();
		}

		function S() {
			document.addEventListener("touchstart", touch2Mouse, true);
			document.addEventListener("touchmove", touch2Mouse, true);
			document.addEventListener("touchend", touch2Mouse, true);
			// gId("hold").addEventListener('touchstart', process_touchstart, false);
			// gId("hold").addEventListener('touchend', process_touchend, false);
		} 
		function setCookie(cname, cvalue, exdays) {
  const d = new Date();
  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
  let expires = "expires="+d.toUTCString();
  document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}

function getCookie(cname) {
  let name = cname + "=";
  let ca = document.cookie.split(';');
  for(let i = 0; i < ca.length; i++) {
    let c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}

function checkCookie() {
  let user = getCookie("username");
  if (user != "") {
    alert("Welcome again " + user);
  } else {
    user = prompt("Please enter your name:", "");
    if (user != "" && user != null) {
      setCookie("username", user, 365);
    }
  }
}

	</script>
	<style>
		body {
			text-align: center;
			background: #222;
			height: 100px;
			margin: 0;
		}

		html {
			--h: 9vh;
		}

		button {
      background: #333;
      color: #fff;
      font-family: Verdana, Helvetica, sans-serif;
      display: block;
      border: 1px solid #333;
      border-radius: var(--h);
      font-size: 6vmin;
      height: var(--h);
      width: calc(50% - 40px);
      margin: 2vh auto 0;
      cursor: pointer;
      transition: 0.2s all;
    }

    /* Adding transformation when the button is active */

    button:active {
      transform: scale(0.98);
      /* Scaling button to 0.98 to its original size */
      /* box-shadow: 3px 2px 22px 1px rgba(0, 0, 0, 0.24);
      Lowering the shadow */
    }

    .btn {
      transition: 0.2s all;
    }

    /* Adding transformation when the button is active */

    .btn:active {
      transform: scale(0.98);
      /* Scaling button to 0.98 to its original size */
    }
	</style>
</head>

<body onload="S()">
	<button id="for" type="submit" onclick="forward()">Forward</button>
	<button id="rev" type="submit" onclick="reverse()">Reverse</button>
	<button type="submit" onclick="up()">Up</button>
	<button type="submit" onclick="down()">Down/Stop</button>
	<button id="hold" type="submit" onmousedown="start()" onmouseup="end()">Click and hold</button>
	<div id="root">
</body>

</html>